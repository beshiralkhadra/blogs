version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=blogs_production
    ports:
      - "5433:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - blog-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    ports:
      - "4433:4433"
    environment:
      - PORT=4433
      - NODE_ENV=production
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/blogs_production
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - blog-network

  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://api:4433
      - API_BASE_URL=http://api:4433
    depends_on:
      - api
    networks:
      - blog-network

networks:
  blog-network:
    driver: bridge

volumes:
  postgres-data:
